executors:
  client_default:
    docker:
      - image: circleci/node:12.1.0
    working_directory: ~/front
  server_default:
    docker:
      - image: circleci/ruby:2.6.5
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:5.7
        environment:
          MYSQL_USER: root
          MYSQL_ALLOW_EMPTY_PASSWORD: yes
    working_directory: ~/backend
  deploy:
    docker:
      - image: circleci/python
    working_directory: ~/front

version: 2.1
jobs:
  build_client:
    executor: client_default
    steps:
      - checkout

      - restore_cache:
          key: v1-yarn-{{ checksum "client/yarn.lock" }}
      - restore_cache:
          key: v1-node-{{ checksum "client/package.json" }}
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: yarn install
          command: |
            cd client
            yarn install
      - save_cache:
          key: v1-yarn-{{ checksum "client/yarn.lock" }}
          paths:
            - client/.cache/yarn
      - save_cache:
          key: v1-node-{{ checksum "client/package.json" }}
          paths:
            - client/node_modules
      - run:
          name: build
          command: |
            cd client
            yarn build
      - save_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - client/build
  deploy_s3:
    executor: deploy
    steps:
      - restore_cache:
          key: v1-build-{{ .Environment.CIRCLE_SHA1 }}
      - run:
          name: install aws cli
          command: sudo pip install awscli
      - deploy:
          name: deploy s3
          environment:
            S3_BUCKET: info-app.com
          command: aws s3 sync client/build s3://${S3_BUCKET}/ --delete
  checkout_code:
    executor: server_default
    steps:
      - checkout

      - save_cache:
          key: v1-server-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/backend/server
  build_server:
    executor: server_default
    steps:
      - restore_cache:
          key: v1-server-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "server/Gemfile.lock" }}
            - v1-dependencies-
      - run:
          name: bundle install
          command: |
            cd server
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          key: v1-dependencies-{{ checksum "server/Gemfile.lock" }}
          paths:
            - server/vendor/bundle
      - run:
          name: wait for db
          command: dockerize -wait tcp://mysql:3306 -timeout 1m
      - run:
          name: setup db
          command: |
            cd server
            bundle exec rake db:create
            bundle exec rake db:schema:load
      - run:
          name: run tests
          command: |
            cd server
            bundle exec rspec
  # deploy_capistrano:
  #   executor: server_default
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints:
  #           - "f1:2b:9a:57:68:c1:27:72:cb:ba:6c:99:be:71:a0:71"
  #     - deploy:
  #         name: deploy by capistrano
  #         command: .circleci/deploy_capistrano.sh
workflows:
  version: 2
  build_test_deploy:
    jobs:
      - build_client
      - deploy_s3:
          requires:
            - build_client
          filters:
            branches:
              only: master
      - checkout_code
      - build_server:
          requires:
            - checkout_code
      # - deploy_capistrano:
      #     requires:
      #       - build_server
      #     filters:
      #       branches:
      #         only: master
